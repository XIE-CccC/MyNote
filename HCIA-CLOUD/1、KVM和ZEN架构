**KVM架构**

![img](assets/86cb8c0b63b14fdaa8fc4d6ecc6fd34d.jpg)

**XEN架构**

![img](assets/6fdf7c75c7d84b67a86e2863430c9c0c.jpg)

**KVM与XEN**

1、XEN需要升级内核，维护一套内核，进来的数据包需要经过domain0来处理。

2、KVM更轻量，通过内核模块来实现，一个VM就是一个进程。

3、XEN被citrix收购，支持cloudstack。

4、KVM被红帽收购，支持openstack。

OpenStack社区更流行，有更过的厂商支持，KVM击败并取代XEN

一、半虚拟化（软件不支持，硬件不支持）

因为当时CPU不支持虚拟化，所以只能修改内核，只能安装linux，因为windows无法修改内核，虚拟机知道自己是一个VM。Guest OS明确自身角色，指令会通过Host OS直接下达CPU执行，中间无需经过虚拟化封装解码（修改内核，系统必须开源）

IO虚拟化：在VM中安装PV Driver，IO流程就可以在内存中完成了

二、完全虚拟化

2005年CPU不支持VT-X也可以安装windows vmware，通过软件模拟CPU，内存，磁盘，网络，当VM向内核请求资源的时候，由虚拟化软件来进行的转换，向宿主机内核去申请资源，让VM以为自己是一台真的虚拟机，但是可以安装windows。特点是特权指令和敏感指令哟VMM（软件）传递，效率低

三、硬件辅助虚拟化

使用完全虚拟化效率太低，Intel：VT-X和AMD：AMD-V在CPU内部加一个标记位，让VM知道自己是一个VM，大部人的指令集可以直接运行在CPU之上。19条敏感指令集除外，还需要依赖虚拟化软件来转换。特点是硬件指令集直接操作内核，修改CPU架构，CPU会捕捉除敏感指令的其他指令，硬件执行效率高

只有XEN虚拟化才有domain0，与半虚拟化和硬件辅助虚拟化无关，XEN也有全虚拟化

KVM也有半虚拟化和硬件辅助虚拟化，不需要domain0。

windows OS安装盘没有自带PV Driver

所以建议系统盘不要使用vritIO，外挂一个虚拟软驱，把驱动放在虚拟软驱，安装windows，加载软盘上的驱动

在windows中安装PV Driver

数据盘可以使用vritIO